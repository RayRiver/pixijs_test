// Generated by CoffeeScript 1.10.0
(function() {
  var Block,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Block = (function(superClass) {
    extend(Block, superClass);

    function Block(config) {
      var dynamic, h, ref, ref1, ref2, renderer, w;
      Block.__super__.constructor.apply(this, arguments);
      this.setTag("Block");
      config = config != null ? config : {};
      w = (ref = config.width) != null ? ref : 30;
      h = (ref1 = config.height) != null ? ref1 : 30;
      dynamic = (ref2 = config.dynamic) != null ? ref2 : false;
      this._world = config.world;
      this._width = w;
      this._height = h;
      renderer = new PIXI.Sprite(resources["block"].texture);
      this.setRenderer(renderer);
      renderer.width = w;
      renderer.height = h;
      renderer.anchor.x = 0.5;
      renderer.anchor.y = 0.5;
      if (this._world) {
        if (dynamic) {
          this._world.add(this);
        } else {
          this._world.addStatic(this);
        }
      }
    }

    Block.prototype.update = function(dt) {
      return Block.__super__.update.apply(this, arguments);
    };

    Block.prototype.getBBox = function() {
      var h, ref, w, x, y;
      ref = this.getPosition(), x = ref[0], y = ref[1];
      w = this._width;
      h = this._height;
      return [x - w / 2, y - h / 2, w, h];
    };

    return Block;

  })(utils.EntityBase);

  (typeof exports !== "undefined" && exports !== null ? exports : this).Block = Block;

}).call(this);

//# sourceMappingURL=block.js.map
