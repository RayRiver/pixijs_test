// Generated by CoffeeScript 1.10.0
(function() {
  var BumpWorld,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BumpWorld = (function(superClass) {
    extend(BumpWorld, superClass);

    function BumpWorld() {
      return BumpWorld.__super__.constructor.apply(this, arguments);
    }

    BumpWorld.prototype.collision = function(item1, item2, dx, dy) {
      var ref, x, y;
      ref = item1.getDesiredPos(), x = ref[0], y = ref[1];
      return item1.setDesiredPos(x + dx, y + dy);
    };

    BumpWorld.prototype.endCollision = function(item1, item2) {};

    BumpWorld.prototype.shouldCollide = function(item1, item2) {
      var tag1, tag2;
      tag1 = item1.getTag();
      tag2 = item2.getTag();
      if (tag1 === "Player" && tag2 === "Block") {
        return true;
      } else if (tag1 === "Enemy" && tag2 === "Block") {
        return true;
      } else if (tag1 === "Player" && tag2 === "Enemy") {
        return true;
      } else {
        return false;
      }
    };

    BumpWorld.prototype.getBBox = function(item) {
      return item.getBBox();
    };

    BumpWorld.prototype.update = function(dt, x, y, w, h) {
      return this.collide(x, y, w, h);
    };

    return BumpWorld;

  })(lib.Bump);

  utils.BumpWorld = BumpWorld;

}).call(this);

//# sourceMappingURL=bump_world.js.map
