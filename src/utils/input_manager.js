// Generated by CoffeeScript 1.10.0
(function() {
  var Input;

  Input = {
    KEY_W: 87,
    KEY_S: 83,
    KEY_A: 65,
    KEY_D: 68,
    _down_keys: {},
    _arrow_up_key: null,
    _arrow_down_key: null,
    _arrow_left_key: null,
    _arrow_right_key: null,
    registerArrowKey: function(keyCode, direction) {
      var key;
      key = this.registerKey(keyCode);
      if (direction === "left") {
        return this._arrow_left_key = key;
      } else if (direction === "right") {
        return this._arrow_right_key = key;
      } else if (direction === "up") {
        return this._arrow_up_key = key;
      } else if (direction === "down") {
        return this._arrow_down_key = key;
      }
    },
    registerKey: function(keyCode) {
      var input, key;
      input = this;
      key = {
        code: keyCode,
        isDown: false,
        isUp: true,
        press: void 0,
        release: void 0,
        downHandler: function(event) {
          if (event.keyCode === key.code) {
            if (key.isUp && key.press) {
              key.press();
            }
            key.isDown = true;
            key.isUp = false;
            input._down_keys[keyCode] = true;
          }
          return event.preventDefault();
        },
        upHandler: function(event) {
          if (event.keyCode === key.code) {
            if (key.isDown && key.release) {
              key.release();
            }
            key.isDown = false;
            key.isUp = true;
            input._down_keys[keyCode] = false;
          }
          return event.preventDefault();
        }
      };
      window.addEventListener("keydown", key.downHandler.bind(key), false);
      window.addEventListener("keyup", key.upHandler.bind(key), false);
      return key;
    },
    getAxis: function(name) {
      var horizontal, vertical;
      if (name === "Vertical") {
        vertical = 0;
        if (this._arrow_up_key.isDown) {
          vertical -= 1;
        } else if (this._arrow_down_key.isDown) {
          vertical += 1;
        }
        return vertical;
      } else if (name === "Horizontal") {
        horizontal = 0;
        if (this._arrow_left_key.isDown) {
          horizontal -= 1;
        } else if (this._arrow_right_key.isDown) {
          horizontal += 1;
        }
        return horizontal;
      } else {
        return lib.assert(false);
      }
    },
    getKey: function(keyCode) {
      if (this._down_keys[keyCode]) {
        return true;
      } else {
        return false;
      }
    }
  };

  utils.Input = Input;

}).call(this);

//# sourceMappingURL=input_manager.js.map
